plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "8.13.1"
}

repositories {
    mavenCentral()
}


def restAssuredVersion = "5.0.0",
    allureVersion = "2.21.0"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}


dependencies {
    testImplementation (
            "io.rest-assured:rest-assured:$restAssuredVersion",

            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "com.codeborne:selenide:6.19.1",
            'io.rest-assured:rest-assured:5.3.1',
            "org.junit.jupiter:junit-jupiter:5.9.3",
            'com.github.javafaker:javafaker:1.0.2',
            "org.slf4j:slf4j-simple:2.0.7",
            'com.codeborne:pdf-test:1.8.1',
            'com.codeborne:xls-test:1.4.3',
            'com.opencsv:opencsv:5.7.1',
            'org.assertj:assertj-core:3.23.1',
            'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.1'


    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}